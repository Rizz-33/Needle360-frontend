name: Deploy React Application with HTTPS

on:
  push:
    branches:
      - dev
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL || 'https://needle360.online' }}
        run: |
          docker build -t rizz336/needle360-frontend:$GITHUB_SHA \
            --build-arg VITE_API_URL=$VITE_API_URL \
            -f Dockerfile .
          docker tag rizz336/needle360-frontend:$GITHUB_SHA rizz336/needle360-frontend:latest
          docker push rizz336/needle360-frontend:$GITHUB_SHA
          docker push rizz336/needle360-frontend:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Clean up old containers
        run: |
          docker stop needle360-frontend-container || true
          docker rm needle360-frontend-container || true
          docker image prune -f
          docker container prune -f

      - name: Check port availability
        run: |
          if sudo lsof -i :80; then sudo fuser -k 80/tcp || true; fi
          if sudo lsof -i :443; then sudo fuser -k 443/tcp || true; fi
          sleep 2

      - name: Create SSL and config directories if needed
        run: |
          sudo mkdir -p /etc/ssl/needle360
          sudo mkdir -p ~/needle360/config

      - name: Copy NGINX configuration
        run: |
          echo 'server {
              listen 80;
              server_name needle360.online www.needle360.online;
              return 301 https://$host$request_uri;
          }

          server {
              listen 443 ssl;
              server_name needle360.online www.needle360.online;

              ssl_certificate /etc/ssl/needle360/combined.crt;
              ssl_certificate_key /etc/ssl/needle360/needle360.online.key;
              ssl_trusted_certificate /etc/ssl/needle360/ca-bundle.crt;

              ssl_protocols TLSv1.2 TLSv1.3;
              ssl_prefer_server_ciphers on;
              ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256;

              root /usr/share/nginx/html;
              index index.html index.htm;

              location / {
                  try_files $uri $uri/ /index.html;
              }

              location /api {
                  proxy_pass http://needle360-backend-container:4000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection "upgrade";
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
              }
          }' | sudo tee ~/needle360/config/nginx.conf

      - name: Verify SSL certificates exist
        run: |
          if [ ! -f "/etc/ssl/needle360/combined.crt" ]; then
            echo "SSL certificate not found at /etc/ssl/needle360/combined.crt"
            exit 1
          fi
          if [ ! -f "/etc/ssl/needle360/needle360.online.key" ]; then
            echo "SSL key not found at /etc/ssl/needle360/needle360.online.key"
            exit 1
          fi
          if [ ! -f "/etc/ssl/needle360/ca-bundle.crt" ]; then
            echo "SSL CA bundle not found at /etc/ssl/needle360/ca-bundle.crt"
            exit 1
          fi

      - name: Pull new image
        run: docker pull rizz336/needle360-frontend:latest

      - name: Run container
        run: |
          docker run -d \
            -p 80:80 \
            -p 443:443 \
            -v /etc/ssl/needle360:/etc/ssl/needle360:ro \
            -v ~/needle360/config/nginx.conf:/etc/nginx/conf.d/default.conf:ro \
            --name needle360-frontend-container \
            --restart unless-stopped \
            --link needle360-backend-container \
            rizz336/needle360-frontend:latest

      - name: Verify deployment
        run: |
          sleep 10
          curl -k -I https://localhost || {
            echo "HTTPS deployment verification failed"
            docker logs needle360-frontend-container
            exit 1
          }
