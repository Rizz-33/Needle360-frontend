name: Deploy React Application with HTTPS

on:
  push:
    branches:
      - dev
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm install --legacy-peer-deps
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Validate Environment Variables
        run: |
          if [ -z "${{ secrets.VITE_API_URL }}" ]; then
            echo "Error: VITE_API_URL is not set"
            exit 1
          fi
          if [ -z "${{ secrets.VITE_STRIPE_PUBLISHABLE_KEY }}" ]; then
            echo "Error: VITE_STRIPE_PUBLISHABLE_KEY is not set"
            exit 1
          fi
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}"
          echo "VITE_STRIPE_PUBLISHABLE_KEY is set (length: ${#VITE_STRIPE_PUBLISHABLE_KEY})"
      - name: Create .env File
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" > .env
          echo "VITE_STRIPE_PUBLISHABLE_KEY=${{ secrets.VITE_STRIPE_PUBLISHABLE_KEY }}" >> .env
          cat .env
      - name: Build and Push
        run: |
          docker build \
            --build-arg VITE_API_URL=${{ secrets.VITE_API_URL }} \
            --build-arg VITE_STRIPE_PUBLISHABLE_KEY=${{ secrets.VITE_STRIPE_PUBLISHABLE_KEY }} \
            -t rizz336/needle360-frontend:$GITHUB_SHA \
            -t rizz336/needle360-frontend:latest \
            -f Dockerfile .
          docker push rizz336/needle360-frontend:$GITHUB_SHA
          docker push rizz336/needle360-frontend:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Create docker network
        run: docker network create needle360-network || true
      - name: Clean up old frontend container
        run: |
          docker stop needle360-frontend-container || true
          docker rm needle360-frontend-container || true
      - name: Check port availability
        run: |
          if sudo lsof -i :80; then sudo fuser -k 80/tcp || true; fi
          if sudo lsof -i :443; then sudo fuser -k 443/tcp || true; fi
          sleep 2
      - name: Set up SSL directories
        run: |
          sudo mkdir -p /etc/ssl/needle360
          sudo mkdir -p /etc/ssl/private
          sudo chmod -R 755 /etc/ssl/needle360
          sudo chmod 750 /etc/ssl/private
          sudo chown -R $USER:$(id -gn) /etc/ssl/needle360 || true
      - name: Verify SSL certificates
        run: |
          if ! sudo test -f "/home/ubuntu/needle360/ssl/fullchain.crt"; then
            echo "SSL certificate not found"
            sudo ls -la /home/ubuntu/needle360/ssl/ || true
            exit 1
          fi
      - name: Deploy frontend container
        run: |
          docker run -d \
            -p 80:80 \
            -p 443:443 \
            -v /home/ubuntu/needle360/ssl:/home/ubuntu/needle360/ssl:ro \
            --name needle360-frontend-container \
            --restart unless-stopped \
            --network needle360-network \
            -e NODE_ENV=production \
            -e VITE_API_URL=${{ secrets.VITE_API_URL }} \
            -e VITE_STRIPE_PUBLISHABLE_KEY=${{ secrets.VITE_STRIPE_PUBLISHABLE_KEY }} \
            rizz336/needle360-frontend:latest
      - name: Verify deployment
        run: |
          echo "Waiting for frontend to be ready..."
          for i in {1..10}; do
            if curl -k -I https://needle360.online >/dev/null 2>&1; then
              echo "Frontend is ready"
              exit 0
            fi
            echo "Attempt $i: Frontend not ready yet"
            sleep 5
          done
          echo "Frontend did not become ready"
          docker logs needle360-frontend-container
          exit 1
