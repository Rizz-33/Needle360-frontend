server {
    listen 80;
    server_name needle360.online www.needle360.online;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name needle360.online www.needle360.online;

    # Updated paths to match Docker volume mounts
    ssl_certificate /etc/ssl/needle360/combined.crt;
    ssl_certificate_key /etc/ssl/needle360/private.key;
    
    # Security enhancements
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Root and frontend configuration
    root /usr/share/nginx/html;
    index index.html index.htm;

    location / {
        try_files $uri $uri/ /index.html;
    }

    # Backend API proxy
    location /api {
        resolver 127.0.0.11 valid=10s;  # Docker's internal DNS
        set $backend "needle360-backend-container:4000";
        proxy_pass http://$backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # SSL stapling and other optimizations
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/ssl.crt;  # Same as cert file since it includes chain
}