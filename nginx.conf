server {
    listen 80;
    server_name needle360.online www.needle360.online;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name needle360.online www.needle360.online;

    ssl_certificate /home/ubuntu/needle360/ssl/fullchain.crt;
    ssl_certificate_key /home/ubuntu/needle360/ssl/private.key;

    # SSL optimizations
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Proxy settings
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Backend API routes
    location /api {
        # Use Docker's internal DNS
        resolver 127.0.0.11 valid=10s ipv6=off;
        proxy_pass http://needle360-backend-container:4000;
        
        # Add error handling
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
    }

    # WebSocket support for socket.io
    location /socket.io/ {  
        resolver 127.0.0.11 valid=10s ipv6=off;
        proxy_pass http://needle360-backend-container:4000;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }

    # Frontend routes
    root /usr/share/nginx/html;
    index index.html index.htm;

    location / {
        try_files $uri $uri/ /index.html;
    }

    # Error pages
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}