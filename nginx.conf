# HTTP server - redirect to HTTPS
server {
    listen 80;
    server_name needle360.online www.needle360.online;
    
    # Version endpoint
    location /version {
        alias /usr/share/nginx/html/version.txt;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }
    
    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    server_name needle360.online www.needle360.online;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/needle360/fullchain.crt;
    ssl_certificate_key /etc/ssl/needle360/private.key;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    
    # Root directory
    root /usr/share/nginx/html;
    index index.html index.htm;
    
    # Version endpoint
    location /version {
        alias /usr/share/nginx/html/version.txt;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }
    
    # Static assets caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # React Router - handle client-side routing
    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }
    
    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}